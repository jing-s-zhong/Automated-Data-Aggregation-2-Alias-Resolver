--========================================
-- AGGREAGTOR SETUP STEPS
--========================================
--
------------------------------------------
-- Step 1: Create a target table to stored summarized data
------------------------------------------
CREATE OR REPLACE TABLE ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY
AS
SELECT --DATA_PATTERN,
      DATA_DATE DATA_TS
	  --,DATA_HOUR
	  --,DATA_TIME
	  --,DATA_TIMEZONE

	  --,BUSINESS_UNIT
	  --,BUSINESS_UNIT_DETAIL
	  --,BUSINESS_UNIT_ID
	  ,BUSINESS_UNIT_DETAIL_ID
	  --,BUSINESS_PARTNER
	  --,TRAFFIC_PARTNER
	  --,PRODUCT_LINE
	  --,PRODUCT_DETAIL
	  --,PLACEMENT

	  --,REVENUE_DOMAIN
	  --,CAMPAIGN_DOMAIN
	  --,PROVIDER
	  --,NETWORK
	  ,NETWORK_ID NETWORK_NAME_ID
	  --,ACCOUNT ACCOUNT_ID

	  --,PARTNER_TAG SOURCE_TAG
	  --,TYPE_TAG
	  --,CHANNEL
	  --,PRODUCT
	  --,MARKET

	  --,COUNTRY
	  --,DEVICE
	  --,DEVICE_TYPE
	  ,DEVICE_TYPE_ID
	  --,BIDDER
	  --,CONTRACT
	  ,CONTRACT_ID

	  ,CURRENCY CURRENCY_CODE
	  ,EXCHANGE_RATE CONVERSION_RATE
	  ,UP_STREAM_SHARE REVSHARE
	  --,DOWN_STREAM_SHARE
	  --,ECPI

	  --,CPC
	  --,CPA
	  --,CTR
	  --,PTQS
	  --,ROW_COUNT
	  --,PAGEVIEWS

	  --,REQUESTS SEARCHES
	  ,MATCHED_REQUESTS BIDDED_SEARCHES
	  --,IN_COMING_BIDS
	  --,WINNING_BIDS
	  --,IMPRESSIONS

	  ,CLICKS
	  --,ACTIONS
	  --,SPAM_CLICKS
	  ,AD_REVENUE_USD GROSS_REVENUE
	  --,REVENUE
FROM SELLSIDE_PERFORMANCE_DATA_TEMPLATE
LIMIT 0;

------------------------------------------
-- Step 2: Register new target table into data landscape table
------------------------------------------
--
SELECT * FROM SELLSIDE_PERFORMANCE_DATA_LANDSCAPE WHERE DATA_TABLE = 'ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY';
--
DELETE FROM SELLSIDE_PERFORMANCE_DATA_LANDSCAPE WHERE DATA_TABLE = 'ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY'; 
--
INSERT INTO SELLSIDE_PERFORMANCE_DATA_LANDSCAPE (DATA_ALIAS,DATA_TABLE
	  --,DATA_PATTERN
	  --,DATA_NAME
	  ,DATA_DATE
	  --,DATA_HOUR
	  --,DATA_TIME
	  --,DATA_TIMEZONE

	  --,BUSINESS_UNIT
	  --,BUSINESS_UNIT_DETAIL
	  --,BUSINESS_UNIT_ID
	  ,BUSINESS_UNIT_DETAIL_ID
	  --,BUSINESS_PARTNER
	  --,TRAFFIC_PARTNER
	  --,PRODUCT_LINE
	  --,PRODUCT_DETAIL
	  --,PLACEMENT

	  --,REVENUE_DOMAIN
	  --,CAMPAIGN_DOMAIN
	  --,PROVIDER
	  --,NETWORK
	  ,NETWORK_ID
	  --,ACCOUNT

	  --,PARTNER_TAG
	  --,TYPE_TAG
	  --,CHANNEL
	  --,PRODUCT
	  --,MARKET

	  --,COUNTRY
	  --,DEVICE
	  --,DEVICE_TYPE
	  ,DEVICE_TYPE_ID
	  --,BIDDER
	  --,CONTRACT
	  ,CONTRACT_ID

	  ,CURRENCY
	  ,EXCHANGE_RATE
	  ,UP_STREAM_SHARE
	  --,DOWN_STREAM_SHARE
	  --,ECPI

	  --,CPC
	  --,CPA
	  --,CTR
	  --,PTQS
	  --,ROW_COUNT
	  --,PAGEVIEWS

	  --,REQUESTS
	  ,MATCHED_REQUESTS
	  --,IN_COMING_BIDS
	  --,WINNING_BIDS
	  --,IMPRESSIONS

	  ,CLICKS
	  --,ACTIONS
	  --,SPAM_CLICKS
	  ,AD_REVENUE_USD
	  --,REVENUE
)
SELECT 'TARGET_DATA:SOURCE_DATA,LOOKUP_DEVICE,LOOKUP_DETYPE,LOOKUP_NETWORK,LOOKUP_ACCOUNT,LOOKUP_BUSINESS,LOOKUP_COVERAGE,LOOKUP_REVSHARE,LOOKUP_CURRENCY' DATA_ALIAS,'ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY' DATA_TABLE
	  --,'DATA_PATTERN:$PATTERN,SOURCE_DATA' DATA_PATTERN
	  --,'DATA_NAME' DATA_NAME
	  ,'DATA_TS' DATA_DATE
	  --,'DATA_HOUR' DATA_HOUR
	  --,'DATA_TIME' DATA_TIME
	  --,'DATA_TIMEZONE' DATA_TIMEZONE

	  --,'BUSINESS_UNIT:SOURCE_DATA,LOOKUP_UNIT' BUSINESS_UNIT
	  --,'BUSINESS_UNIT_DETAIL:SOURCE_DATA,LOOKUP_UNIT' BUSINESS_UNIT_DETAIL
	  --,'BUSINESS_UNIT_ID:SOURCE_DATA,LOOKUP_UNIT' BUSINESS_UNIT_ID
	  ,'BUSINESS_UNIT_DETAIL_ID:SOURCE_DATA,LOOKUP_BUSINESS' BUSINESS_UNIT_DETAIL_ID
	  --'BUSINESS_UNIT' BUSINESS_PARTNER
	  --'BUSINESS_UNIT_DETAIL' TRAFFIC_PARTNER
	  --,'PRODUCT_LINE' PRODUCT_LINE
	  --,'PRODUCT_DETAIL' PRODUCT_DETAIL
	  --,'PLACEMENT' PLACEMENT

	  --,REVENUE_DOMAIN
	  --,CAMPAIGN_DOMAIN
	  --,'PROVIDER' PROVIDER
	  --,'NETWORK' NETWORK
	  ,'NETWORK_NAME_ID' NETWORK_ID
	  --,'ACCOUNT_ID' ACCOUNT

	  --,'SOURCE_TAG' PARTNER_TAG
	  --,'TYPE_TAG' TYPE_TAG
	  --,'CHANNEL' CHANNEL
	  --,'PRODUCT' PRODUCT
	  --,'MARKET' MARKET

	  --,'COUNTRY' COUNTRY
	  --,'DEVICE' DEVICE
	  --,'DEVICE_TYPE:LOOKUP_DETYPE,SOURCE_DATA' DEVICE_TYPE
	  ,'DEVICE_TYPE_ID:LOOKUP_DETYPE,SOURCE_DATA' DEVICE_TYPE_ID
	  --,'BIDDER' BIDDER
	  --,'CONTRACT' CONTRACT
	  ,'CONTRACT_ID' CONTRACT_ID

	  ,'CURRENCY_CODE' CURRENCY
	  ,'CONVERSION_RATE' EXCHANGE_RATE
	  ,'REVSHARE' UP_STREAM_SHARE
	  --,'DOWN_STREAM_SHARE' DOWN_STREAM_SHARE
	  --,'ECPI' ECPI

	  --,'CPC' CPC
	  --,'CPA' CPA
	  --,'CTR' CTR
	  --,'PTQS' PTQS
	  --,'ROW_COUNT:SUM(?)' ROW_COUNT
	  --,'PAGEVIEWS:SUM(?)' PAGEVIEWS

	  --,'SEARCHES:SUM(?)' REQUESTS
	  ,'BIDDED_SEARCHES:SUM(?)' MATCHED_REQUESTS
	  --,'IN_COMING_BIDS:SUM(?)' IN_COMING_BIDS
	  --,'WINNING_BIDS:SUM(?)' WINNING_BIDS
	  --,'IMPRESSIONS:SUM(?)' IMPRESSIONS

	  ,'CLICKS:SUM(?)' CLICKS
	  --,'ACTIONS:SUM(?)' ACTIONS
	  --,'SPAM_CLICKS:SUM(?)' SPAM_CLICKS
	  ,'GROSS_REVENUE:SUM(?)' AD_REVENUE
	  --,'REVENUE:SUM(?)' REVENUE
;

-- check new registration record
SELECT *
FROM SELLSIDE_PERFORMANCE_DATA_LANDSCAPE
WHERE DATA_TABLE IN (''
  ,'ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY'
  ,'DATAMART.SELLSIDE_NETWORK.TAP_NATIVE_SOURCE_PUBID_PERFORMANCE_DAILY'
  ,'SELLSIDE_ACCOUNT_PARTNER_USAGE_MAPPING' 
  ,'SELLSIDE_YAHOO_SOURCETAG_USAGE_MAPPINGS'); 
  
SELECT *,''
FROM SELLSIDE_PERFORMANCE_DATA_LANDSCAPE
WHERE DATA_ALIAS LIKE ANY ('TARGET_DATA%','COLUMN_DATA','LOOKUP_%','MAP_%')
OR DATA_TABLE IN (
  'DATAMART.SELLSIDE_NETWORK.YAHOO_TYPE_PLATFORM_PERFORMANCE_HOURLY',
  'DATAMART.SELLSIDE_NETWORK.GOOGLE_ADSENSE_DOMAIN_PLATFORM_DAILY'
)
;

------------------------------------------
-- Step 3: Generate the parametwrs of the target data into target configuration table
------------------------------------------
--
DELETE FROM DATA_AGGREGATION_TARGETS WHERE TARGET_TABLE = 'ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY';
--
CALL DATA_AGGREGATION_TARGET_SETUP(
  'SELLSIDE',
  'ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY',
  'DATA_TIME',
  1440,
  'DATEADD(MINUTE, :2, :1)',
  'DAY',
  0
);

SELECT * FROM DATA_AGGREGATION_TARGETS
WHERE TARGET_TABLE = 'ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY';


------------------------------------------
-- Step 4: Search and setup all data source tables for new created target table
------------------------------------------
-- 
DELETE FROM DATA_AGGREGATION_SOURCES WHERE TARGET_TABLE = 'ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY';
--

CALL DATA_AGGREGATION_SOURCE_SETUP(
    'SELLSIDE',
    'ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY',
    'DATAMART.SELLSIDE_NETWORK.GOOGLE_ADSENSE_DOMAIN_PLATFORM_DAILY/AFD-USD',
    0);
    
CALL DATA_AGGREGATION_SOURCE_SETUP(
    'SELLSIDE',
    'ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY',
    'DATAMART.SELLSIDE_NETWORK.GOOGLE_ADSENSE_DOMAIN_PLATFORM_DAILY/AFD-CAD',
    0);
    
CALL DATA_AGGREGATION_SOURCE_SETUP(
    'SELLSIDE',
    'ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY',
    'DATAMART.SELLSIDE_NETWORK.YAHOO_TYPE_PLATFORM_PERFORMANCE_HOURLY',
    0);
    
 CALL DATA_AGGREGATION_SOURCE_SETUP(
    'SELLSIDE',
    'ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY',
    'DATAMART.SELLSIDE_NETWORK.YAHOO_SOURCE_PLATFORM_PERFORMANCE_DAILY/SYNDICATION',
    0);
       
CALL DATA_AGGREGATION_SOURCE_SETUP('SELLSIDE','ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY', 0);

-- Check up
SELECT * 
FROM DATA_AGGREGATION_SOURCES
WHERE TARGET_TABLE = 'ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY';

-- Enable needed sources
UPDATE DATA_AGGREGATION_SOURCES
SET SOURCE_ENABLED = True
WHERE TARGET_TABLE = 'ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY'
AND SOURCE_TABLE IN ('$'
  --,'DATAMART.SELLSIDE_NETWORK.AMAZON_UAM_BID_METRICS_REPORT_PERFORMANCE_DAILY'
  --,'DATAMART.SELLSIDE_NETWORK.AMAZON_UAM_EARNINGS_REPORT_PERFORMANCE_DAILY'
  --,'DATAMART.SELLSIDE_NETWORK.AOL_REVENUE_PERFORMANCE_DAILY'
  ,'DATAMART.SELLSIDE_NETWORK.BING_PTAG_PERFORMANCE_DAILY'
  --,'DATAMART.SELLSIDE_NETWORK.BING_TYPE_TAG_COUNTRY_PERFORMANCE_DAILY'
  --,'DATAMART.SELLSIDE_NETWORK.BING_TYPE_TAG_PERFORMANCE_HOURLY'
  --,'DATAMART.SELLSIDE_NETWORK.DISTRICT_M_BOOST3_METRICS_API_PERFORMANCE_DAILY'
  --,'DATAMART.SELLSIDE_NETWORK.FLYWEEL_PERFORMANCE_DAILY'
  --,'DATAMART.SELLSIDE_NETWORK.GOOGLE_AD_MANAGER_ACCOUNT_PERFORMANCE_DAILY'
  --,'DATAMART.SELLSIDE_NETWORK.GOOGLE_AD_MANAGER_ORDER_PERFORMANCE_DAILY'
  --,'DATAMART.SELLSIDE_NETWORK.GOOGLE_ADSENSE_CHANNEL_PLATFORM_COUNTRY_PERFORMANCE_DAILY'
  --,'DATAMART.SELLSIDE_NETWORK.GOOGLE_ADSENSE_CHANNEL_PLATFORM_DAILY'
  , 'DATAMART.SELLSIDE_NETWORK.GOOGLE_ADSENSE_DOMAIN_PLATFORM_DAILY/AFD-CAD'
  , 'DATAMART.SELLSIDE_NETWORK.GOOGLE_ADSENSE_DOMAIN_PLATFORM_DAILY/AFD-USD'
  --,'DATAMART.SELLSIDE_NETWORK.RUBICON_SITE_PERFORMANCE_DAILY'
  --,'DATAMART.SELLSIDE_NETWORK.SHARETHROUGH_PLACEMENT_PERFORMANCE_DAILY'
  --,'DATAMART.SELLSIDE_NETWORK.SOVRN_ALL_TRAFFIC_PERFORMANCE_DAILY'
  --,'DATAMART.SELLSIDE_NETWORK.TAP_NATIVE_SOURCE_PUBID_PERFORMANCE_DAILY'
  --,'DATAMART.SELLSIDE_NETWORK.TRIPLE_LIFT_PLACEMENT_PERFORMANCE_DAILY'
  --,'DATAMART.SELLSIDE_NETWORK.TRIPLE_LIFT_PUBLISHER_PERFORMANCE_DAILY'
  --,'DATAMART.SELLSIDE_NETWORK.YAHOO_SOURCE_PERFORMANCE_DAILY'
  --,'DATAMART.SELLSIDE_NETWORK.YAHOO_SOURCE_PERFORMANCE_HOURLY_PARSED_TZ_LOS_ANGELES_SEARCH'
  , 'DATAMART.SELLSIDE_NETWORK.YAHOO_SOURCE_PLATFORM_PERFORMANCE_DAILY/SYNDICATION'
  --,'DATAMART.SELLSIDE_NETWORK.YAHOO_TYPE_PLATFORM_PERFORMANCE_DAILY'
  ,'DATAMART.SELLSIDE_NETWORK.YAHOO_TYPE_PLATFORM_PERFORMANCE_HOURLY'
  --,'DATAMART.SELLSIDE_NETWORK.YAHOO_TYPE_PLATFORM_PERFORMANCE_HOURLY_PARSED_TZ_LOS_ANGELES'
);

-- debug
CALL SELLSIDE_AGGREGATION_SOURCE_SETUP('ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY','DATAMART.SELLSIDE_NETWORK.BING_TYPE_TAG_COUNTRY_PERFORMANCE_DAILY', True);
CALL SELLSIDE_AGGREGATION_SOURCE_SETUP('ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY', True);


------------------------------------------
-- Step 5: Run a single day manual test
------------------------------------------
-- 
DELETE FROM ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY WHERE DATA_TS >= '2020-01-01';
--

CALL DATA_AGGREGATOR ('ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY', '2019-12-20', 0);

-- check up
SELECT DATA_TS, COUNT(*) CNT
FROM ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY
GROUP BY DATA_TS
ORDER BY DATA_TS DESC
LIMIT 15;

SELECT DATA_PATTERN, COUNT(*) CNT
FROM ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY
GROUP BY DATA_PATTERN
ORDER BY DATA_PATTERN DESC;

SELECT *
FROM ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY
--WHERE DATA_PATTERN != 195019775
ORDER BY DATA_TS DESC
LIMIT 1000;

SELECT BITXOR(422143,422399),BITXOR(422143,520447);

------------------------------------------422143
-- Step 6: Run a loop through all available dates test
------------------------------------------
-- Setup an initial starting date for next loop run
UPDATE DATA_AGGREGATION_TARGETS
SET  BATCH_PROCESSED = '2019-12-31'
    ,BATCH_PROCESSING = NULL
WHERE target_table = 'ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY';

-- update the source data availabily 
UPDATE DATA_AGGREGATION_SOURCES 
SET DATA_AVAILABLETIME = CURRENT_DATE() - 7,
    DATA_CHECKSCHEDULE = CURRENT_DATE()
WHERE TARGET_TABLE = 'ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY';

-- Check current batch start and stop time
SELECT A.BATCH_PROCESSED
    ,MIN(B.DATA_AVAILABLETIME) DATA_AVAILABLETIME
FROM DATA_AGGREGATION_TARGETS A
JOIN DATA_AGGREGATION_SOURCES B
USING (TARGET_TABLE)
WHERE A.TARGET_TABLE = 'ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY'
GROUP BY A.BATCH_PROCESSED
;

-- Check current batch details
SELECT A.BATCH_PROCESSED
    ,A.BATCH_PROCESSING
    ,B.DATA_AVAILABLETIME
    ,B.SOURCE_TABLE
    ,B.TRANSFORMATION
FROM DATA_AGGREGATION_TARGETS A
JOIN DATA_AGGREGATION_SOURCES B
USING (TARGET_TABLE)
WHERE A.TARGET_TABLE = 'ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY';

-- Automate the Aggregate data population
-- DELETE FROM ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY WHERE DATA_DATE >= '2020-01-01' AND BUSINESS_UNIT_DETAIL IS NULL ;
-- UPDATE DATA_AGGREGATION_TARGETS SET  BATCH_PROCESSED = '2019-12-31',BATCH_PROCESSING = NULL WHERE target_table = 'ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY';
CALL DATA_AGGREGATOR ('ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY', 0);

-- check up
SELECT DATA_TS, COUNT(*) CNT
FROM ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY
GROUP BY DATA_TS
ORDER BY DATA_TS DESC
LIMIT 15;

SELECT *
FROM ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY
WHERE DATA_TS >= '2020-01-01'
--AND BUSINESS_UNIT_DETAIL_ID IS NULL
LIMIT 1000
;

SELECT DATA_PATTERN, COUNT(*) CNT
FROM ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY
WHERE DATA_TS = '2020-01-01'
GROUP BY DATA_PATTERN
ORDER BY DATA_PATTERN DESC;

SELECT DATA_PATTERN, COUNT(*) CNT
FROM ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY
WHERE DATA_TS = '2019-12-30'
GROUP BY DATA_PATTERN
ORDER BY DATA_PATTERN DESC;

-- check the starting date for next loop run
SELECT *
FROM DATA_AGGREGATION_TARGETS
WHERE TARGET_TABLE = 'ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY';

-- Clear a temporarili blocking status
UPDATE DATA_AGGREGATION_TARGETS
SET BATCH_PROCESSING = NULL
WHERE TARGET_TABLE = 'ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY';

------------------------------------------
-- Step 7: Schedule an automation task to make the SP call
------------------------------------------
-- update the source data availabily 
UPDATE DATA_AGGREGATION_SOURCES 
SET DATA_AVAILABLETIME = '2020-01-03 00:00:00.000',
  DATA_CHECKSCHEDULE = CURRENT_DATE()
WHERE TARGET_TABLE = 'ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY';

-- Run summary population 
CALL DATA_AGGREGATOR ('ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY', 0);

-- Check the summary data status
SELECT *
FROM DATA_AGGREGATION_SOURCES
WHERE TARGET_TABLE = 'ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY'
;


------------------------------------------
-- Step 8: Check aggregated data status
------------------------------------------
SELECT DATA_TS, BUSINESS_UNIT, BUSINESS_UNIT_DETAIL, COUNT(*) CNT
FROM ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY
GROUP BY DATA_TS, BUSINESS_UNIT, BUSINESS_UNIT_DETAIL
ORDER BY DATA_TS DESC, BUSINESS_UNIT, BUSINESS_UNIT_DETAIL;

SELECT DATA_TS, NETWORK, ACCOUNT_ID, COUNT(*) CNT
FROM ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY
GROUP BY DATA_TS, NETWORK, ACCOUNT_ID
ORDER BY DATA_TS DESC;

------------------------------------------
-- Step 9: Clean up the test context created by this script
------------------------------------------
DELETE FROM DATA_AGGREGATION_SOURCES 
WHERE TARGET_TABLE = 'ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY';


DELETE FROM DATA_AGGREGATION_TARGETS 
WHERE TARGET_TABLE = 'ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY';

DELETE FROM SELLSIDE_PERFORMANCE_DATA_LANDSCAPE 
WHERE DATA_TABLE = 'ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY'; 

DROP TABLE ZZZ_SELLSIDE_ACCOUNT_DATA_DAILY;
